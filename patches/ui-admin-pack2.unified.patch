diff --git a/src/App.jsx b/src/App.jsx
index e32fcca..5cbcd97 100644
--- a/src/App.jsx
+++ b/src/App.jsx
@@ -498,6 +498,7 @@ export default function App(){
   next[dateStr] = next[dateStr] || {};
   next[dateStr][key] = personId || null; // si pasas '', quita override
   up(['overrides'], next);
+  up(['audit'], [ ...(state.audit||[]), { ts:new Date().toISOString(), actor:(auth.user?.email||'unknown'), action:'override', dateStr, assignmentIndex, personId } ]);
 }
 
 
@@ -708,7 +709,7 @@ export default function App(){
           </Card>
 
           <TimeOffPanel state={state} setState={setState} controls={controls} isAdmin={isAdmin} currentUser={auth.user} />
-          <SwapsPanel state={state} setState={setState} assignments={ASS} />
+          <SwapsPanel state={state} setState={setState} assignments={ASS}  isAdmin={isAdmin} currentUser={auth.user} />
           {isAdmin && <RefuerzosPanel state={state} up={up} />}
           {isAdmin && <GeneradorPicos state={state} up={up} />}
           <PropuestaCierre
@@ -1029,6 +1030,10 @@ function TimeOffPanel({ state, setState, controls, isAdmin, currentUser }){
   function setTOStatus(idx,status){
     if (!isAdmin) return;
     setState(prev=>({...prev, timeOffs: prev.timeOffs.map((t,i)=> i===idx? {...t,status}:t)}));
+    setState(prev=> ({...prev, audit:[...(prev.audit||[]), {
+      ts:new Date().toISOString(), actor:(currentUser?.email||'unknown'), action:'vacaciones:'+status,
+      personId: (prev.timeOffs[idx]? prev.timeOffs[idx].personId : null)
+    }]}));
   }
 
   return (
@@ -1043,7 +1048,7 @@ function TimeOffPanel({ state, setState, controls, isAdmin, currentUser }){
         <div className="col-span-4"><label className="text-xs">Hasta</label><input type="date" value={newTO.end} onChange={(e)=>setNewTO({...newTO,end:e.target.value})} className="w-full px-2 py-1 rounded border"/></div>
         <div className="col-span-4"><label className="text-xs">Tipo</label>
           <select value={newTO.type} onChange={(e)=>setNewTO({...newTO,type:e.target.value})} className="w-full px-2 py-1 rounded border">
-            <option value="vacaciones">Vacaciones</option>
+            <option value="vacaciones">Vacaciones</option disabled={!isAdmin}>
             <option value="libranza">Libranza</option>
             <option value="viaje">Viaje (día entero)</option>
           </select>
@@ -1084,11 +1089,12 @@ function TimeOffPanel({ state, setState, controls, isAdmin, currentUser }){
 }
 
 // ===== Swaps =====
-function SwapsPanel({ state, setState, assignments }){
+function SwapsPanel({ state, setState, assignments, isAdmin, currentUser }){
   const [swapDraft,setSwapDraft]=useState({ dateA: state.startDate, shiftIndexA:0, dateB: state.startDate, shiftIndexB:0 });
 
   function proposeSwap(){ const req={...swapDraft, requestedBy: "user", status:'pendiente'}; setState(prev=>({...prev, swaps:[...prev.swaps, req]})); }
   function approveSwap(i){
+    if (!isAdmin) return;
     const sw=state.swaps[i];
     const A=assignments[sw.dateA]?.[sw.shiftIndexA]; const B=assignments[sw.dateB]?.[sw.shiftIndexB];
     if(!A||!B||!A.personId||!B.personId){ alert('No encuentro asignaciones válidas'); return; }
@@ -1099,9 +1105,12 @@ function SwapsPanel({ state, setState, assignments }){
     overrides[sw.dateA][keyA]=B.personId; overrides[sw.dateB][keyB]=A.personId;
     const swaps=state.swaps.map((r,idx)=> idx===i? {...r,status:'aprobada'}:r);
     setState(prev=>({...prev, overrides, swaps }));
+    setState(prev=> ({...prev, audit:[...(prev.audit||[]), {ts:new Date().toISOString(), actor:(currentUser?.email||'unknown'), action:'swap:aprobada', index:i}] }));
   }
   function denySwap(i){ setState(prev=>({...prev, swaps: prev.swaps.map((r,idx)=> idx===i? {...r,status:'denegada'}:r)})); }
+    if (!isAdmin) return;
   function archiveSwap(i){ setState(prev=>({...prev, swaps: prev.swaps.map((r,idx)=> idx===i? {...r,status:'archivada'}:r)})); }
+    setState(prev=> ({...prev, audit:[...(prev.audit||[]), {ts:new Date().toISOString(), actor:(currentUser?.email||'unknown'), action:'swap:denegada', index:i}] }));
   function deleteSwap(i){ setState(prev=>({...prev, swaps: prev.swaps.filter((_,idx)=> idx!==i)})); }
 
   return (
@@ -1369,7 +1378,7 @@ function ResumenPanel({ controls, annualTarget, onExportICS }){
   );
 }
 // ===== Modal Día =====
-function DayModal({ dateStr, date, assignments, people, onOverride, onClose }){
+function DayModal({ dateStr, date, assignments, people, onOverride, onClose, isAdmin }){
   const pmap=new Map(people.map(p=>[p.id,p]));
   const sorted=assignments.map(x=>x); // ya vienen ordenados por ASS
   return (
@@ -1397,7 +1406,7 @@ function DayModal({ dateStr, date, assignments, people, onOverride, onClose }){
                       className="border rounded px-2 py-1 text-sm"
                       value={c.personId || ''}
                       onChange={e=> onOverride(dateStr, i, e.target.value || null)}
-                    >
+                     disabled={!isAdmin}>
                       <option value="">— Sin override —</option>
                       {people.map(pp=> <option key={pp.id} value={pp.id}>{pp.name}</option>)}
                     </select>
@@ -1529,7 +1538,7 @@ function AdminUsersAndPerms({ auth }) {
             <div><label className="text-xs">Rol</label>
               <select className="w-full border rounded px-2 py-1"
                       value={creating.role} onChange={e=>setCreating({...creating,role:e.target.value})}>
-                <option value="user">user</option>
+                <option value="user">user</option disabled={!isAdmin}>
                 <option value="admin">admin</option>
               </select>
             </div>
