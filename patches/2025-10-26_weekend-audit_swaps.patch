From b48747b3484f59c9698037ae1f6543597df4c785 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Andr=C3=A9s=20Fern=C3=A1ndez?= <andres@careucom.com>
Date: Sun, 26 Oct 2025 08:48:36 +0000
Subject: [PATCH] =?UTF-8?q?feat(admin):=20Debug=20card=20con=20toggles=20+?=
 =?UTF-8?q?=20WeekendAuditPanel=20(m=C3=A9tricas=20y=20CSV)=20|=20feat(swa?=
 =?UTF-8?q?ps):=20validaciones,=20guards=20y=20audit=20trail?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

---
 .gitignore                                 |   4 +
 patches/2025-10-25_debug_persist_fix.patch |   0
 src/App.jsx                                | 161 +++++++----------
 src/components/WeekendAuditPanel.jsx       | 192 ++++++++++-----------
 4 files changed, 164 insertions(+), 193 deletions(-)
 create mode 100644 patches/2025-10-25_debug_persist_fix.patch

diff --git a/.gitignore b/.gitignore
index 9bf0eb2..8f24a54 100644
--- a/.gitignore
+++ b/.gitignore
@@ -9,3 +9,7 @@ build/
 *.backup
 src/App.jsx.bak.*
 src/App.jsx.backup_*
+
+# build
+/dist
+
diff --git a/patches/2025-10-25_debug_persist_fix.patch b/patches/2025-10-25_debug_persist_fix.patch
new file mode 100644
index 0000000..e69de29
diff --git a/src/App.jsx b/src/App.jsx
index 5f18bc3..189f539 100644
--- a/src/App.jsx
+++ b/src/App.jsx
@@ -1,6 +1,6 @@
 import React, { useEffect, useMemo, useState } from "react";
-import WeekendAuditPanel from "./components/WeekendAuditPanel";
 
+import WeekendAuditPanel from "./components/WeekendAuditPanel";
 // === Defaults para autoload de usuarios no-admin ===
 const PUBLIC_SPACE = { id: "turnos-2025", readToken: "READ-2025" };
 
@@ -1439,10 +1439,14 @@ function WeeklyView({ startDate, weeks, assignments, people, timeOffs, province,
     return true;
   };
   const getTOType = (dateStr, personId) => {
-    const d = parseDateValue(dateStr);
-    const hit = (timeOffs||[]).find(to => to.personId===personId && to.status==="aprobada" && parseDateValue(to.start) <= d && d <= parseDateValue(to.end));
-    return hit ? hit.type : null;
-  };
+  const d_ = parseDateValue(dateStr);
+  const hit = (timeOffs||[]).find(to => (
+    to.personId === personId &&
+    to.status === "aprobada" &&
+    parseDateValue(to.start) <= d_ && d_ <= parseDateValue(to.end)
+  ));
+  return hit ? hit.type : null;
+};
   return (
     <div className="overflow-x-auto print-only:block">
       <table className="w-full text-sm border-collapse">
@@ -1564,47 +1568,27 @@ function TimeOffPanel({ state, setState, controls, isAdmin, currentUser }){
 
 // ===== Swaps =====
 function SwapsPanel({ state, setState, assignments, isAdmin, currentUser }){
-  const [swapDraft,setSwapDraft]=useState({
-    dateA: state.startDate, shiftIndexA:0,
-    dateB: state.startDate, shiftIndexB:0
-  });
-
-  function proposeSwap(){
-    const {dateA, shiftIndexA, dateB, shiftIndexB} = swapDraft;
-    if (!dateA || !dateB){ alert("Falta fecha A/B"); return; }
-    if (shiftIndexA == null || shiftIndexB == null){ alert("Falta shift A/B"); return; }
-    if (dateA === dateB && shiftIndexA === shiftIndexB){ alert("Intercambio idéntico"); return; }
-    const A = (assignments[dateA]||[])[shiftIndexA];
-    const B = (assignments[dateB]||[])[shiftIndexB];
-    if (!A || !B || !A.personId || !B.personId){ alert("Ambos turnos deben tener persona asignada"); return; }
-    if (A.personId === B.personId){ alert("No tiene sentido intercambiar la misma persona"); return; }
-    const exists = (state.swaps||[]).some(sw=>{
-      const sameAB = sw.dateA===dateA && sw.shiftIndexA===shiftIndexA && sw.dateB===dateB && sw.shiftIndexB===shiftIndexB;
-      const sameBA = sw.dateA===dateB && sw.shiftIndexA===shiftIndexB && sw.dateB===dateA && sw.shiftIndexB===shiftIndexA;
-      return sameAB || sameBA;
-    });
-    if (exists){ alert("Ya hay un swap igual o inverso"); return; }
-    const req = {...swapDraft, requestedBy: (currentUser&&currentUser.id)||"user", status:"pendiente"};
-    setState(prev=>({...prev, swaps:[...(prev.swaps||[]), req]}));
-  }
+  const [swapDraft,setSwapDraft]=useState({ dateA: state.startDate, shiftIndexA:0, dateB: state.startDate, shiftIndexB:0 });
 
+  function proposeSwap(){ const req={...swapDraft, requestedBy: "user", status:'pendiente'}; setState(prev=>({...prev, swaps:[...prev.swaps, req]})); }
   function approveSwap(i){
     if (!isAdmin) return;
     const sw=state.swaps[i];
-    const A=(assignments[sw.dateA]||[])[sw.shiftIndexA];
-    const B=(assignments[sw.dateB]||[])[sw.shiftIndexB];
-    if(!A||!B||!A.personId||!B.personId){ alert("No encuentro asignaciones válidas"); return; }
-    const keyA = `${A.shift.start}-${A.shift.end}-${(A.shift.label || ('T'+(sw.shiftIndexA+1)))}`;
-    const keyB = `${B.shift.start}-${B.shift.end}-${(B.shift.label || ('T'+(sw.shiftIndexB+1)))}`;
+    const A=assignments[sw.dateA]?.[sw.shiftIndexA]; const B=assignments[sw.dateB]?.[sw.shiftIndexB];
+    if(!A||!B||!A.personId||!B.personId){ alert('No encuentro asignaciones válidas'); return; }
+    const keyA=`${A.shift.start}-${A.shift.end}-${A.shift.label||`T${sw.shiftIndexA+1}`}`;
+    const keyB=`${B.shift.start}-${B.shift.end}-${B.shift.label||`T${sw.shiftIndexB+1}`}`;
     const overrides=structuredClone(state.overrides||{});
     overrides[sw.dateA]=overrides[sw.dateA]||{}; overrides[sw.dateB]=overrides[sw.dateB]||{};
     overrides[sw.dateA][keyA]=B.personId; overrides[sw.dateB][keyB]=A.personId;
-    const swaps=state.swaps.map((r,idx)=> idx===i? {...r,status:'aprobada', approvedBy:(currentUser?.name||currentUser?.id||"admin"), approvedAt:new Date().toISOString()}:r);
+    const swaps = state.swaps.map((r,idx)=> idx===i ? {...r, status:'aprobada', approvedBy:(currentUser?.name||currentUser?.id||"admin"), approvedAt:new Date().toISOString()} : r);
     setState(prev=>({...prev, overrides, swaps }));
   }
-  function denySwap(i){ if (!isAdmin) return; setState(prev=>({...prev, swaps: prev.swaps.map((r,idx)=> idx===i? {...r,status:'denegada'}:r)})); }
-  function archiveSwap(i){ if (!isAdmin) return; setState(prev=>({...prev, swaps: prev.swaps.map((r,idx)=> idx===i? {...r,status:'archivada'}:r)})); }
-  function deleteSwap(i){ if (!isAdmin) return; setState(prev=>({...prev, swaps: prev.swaps.filter((_,idx)=> idx!==i)})); }
+  function denySwap(i){ if (!isAdmin) return;  setState(prev=>({...prev, swaps: prev.swaps.map((r,idx)=> idx===i? {...r,status:'denegada'}:r)})); }
+    if (!isAdmin) return;
+  function archiveSwap(i){ if (!isAdmin) return;  setState(prev=>({...prev, swaps: prev.swaps.map((r,idx)=> idx===i? {...r,status:'archivada'}:r)})); }
+    if (!isAdmin) return;
+  function deleteSwap(i){ if (!isAdmin) return;  setState(prev=>({...prev, swaps: prev.swaps.filter((_,idx)=> idx!==i)})); }
 
   return (
     <Card title="Swaps (intercambios)">
@@ -1616,23 +1600,13 @@ function SwapsPanel({ state, setState, assignments, isAdmin, currentUser }){
           <div className="col-span-6"><label className="text-xs">Shift # B</label><input type="number" min={0} value={swapDraft.shiftIndexB} onChange={(e)=>setSwapDraft({...swapDraft,shiftIndexB:Number(e.target.value)})} className="w-full px-2 py-1 rounded border"/></div>
           <div className="col-span-12"><button onClick={proposeSwap} className="px-3 py-1.5 rounded-lg border w-full">Proponer swap</button></div>
         </div>
-
-        <div className="flex items-center justify-between text-xs">
-          <label className="flex items-center gap-2">
-            <input type="checkbox" checked={state.showArchivedSwaps} onChange={(e)=>setState(prev=>({...prev, showArchivedSwaps:e.target.checked}))} />
-            Mostrar archivados
-          </label>
-        </div>
-
+        <div className="flex items-center justify-between text-xs"><label className="flex items-center gap-2"><input type="checkbox" checked={state.showArchivedSwaps} onChange={(e)=>setState(prev=>({...prev, showArchivedSwaps:e.target.checked}))} /> Mostrar archivados</label></div>
         <div className="border rounded-lg divide-y">
-          {(state.swaps||[]).filter(sw => state.showArchivedSwaps || sw.status!=='archivada').length===0 &&
-            <div className="p-3 text-sm text-slate-500">Sin swaps.</div>
-          }
-          {(state.swaps||[])
-            .filter(sw => state.showArchivedSwaps || sw.status!=='archivada')
-            .map((sw,idx) => (
+          {state.swaps.filter(sw=> state.showArchivedSwaps || sw.status!=='archivada').length===0 && <div className="p-3 text-sm text-slate-500">Sin swaps.</div>}
+          {state.swaps.map((sw,idx)=> (
+            (state.showArchivedSwaps || sw.status!=='archivada') && (
               <div key={idx} className="flex items-center justify-between p-2 text-sm">
-                <div>Swap #{idx+1}: {sw.dateA} [#{sw.shiftIndexA}] ⇄ {sw.dateB} [#{sw.shiftIndexB}] · Estado: <b>{sw.status}</b></div>
+                <div>Swap #{idx+1}: {sw.dateA} [#{sw.shiftIndexA}] ⇄ {sw.dateB} [#{sw.shiftIndexB}] · Estado: <b>{sw.status}</b>{sw.status==='aprobada' && (<span> · Aprobado por <b>{sw.approvedBy||'admin'}</b>{sw.approvedAt?` el ${new Date(sw.approvedAt).toLocaleString()}`:""}</span>)}</div>
                 <div className="flex items-center gap-3">
                   {sw.status!=='aprobada' && <button className="text-emerald-700 hover:underline" onClick={()=>approveSwap(idx)}>Aprobar</button>}
                   {sw.status!=='denegada' && <button className="text-rose-700 hover:underline" onClick={()=>denySwap(idx)}>Denegar</button>}
@@ -1640,13 +1614,14 @@ function SwapsPanel({ state, setState, assignments, isAdmin, currentUser }){
                   <button className="text-red-600 hover:underline" onClick={()=>deleteSwap(idx)}>Eliminar</button>
                 </div>
               </div>
-            ))}
+            )
+          ))}
         </div>
       </div>
     </Card>
   );
 }
-// ===== Refuerzos =====
+
 // ===== Refuerzos =====
 function RefuerzosPanel({ state, up }){
   const [ev,setEv]=useState({ label:'Black Friday', start: state.startDate, end: state.startDate, weekdaysExtraSlots:1, weekendExtraSlots:1 });
@@ -2338,17 +2313,6 @@ function VacationPolicyPanel({ state, up }){
 
 
 function AuthenticatedApp(props){
-  // Persistencia simple de toggles Admin (localStorage)
-  useEffect(()=>{ try{
-    const raw = localStorage.getItem("gt_debug");
-    if(raw){
-      const dbg = JSON.parse(raw);
-      setState(prev=>({...prev, debug:{...(prev.debug||{}), ...dbg}}));
-    }
-  }catch(_){/* noop */} },[]);
-  useEffect(()=>{ try{
-    localStorage.setItem("gt_debug", JSON.stringify(state.debug||{}));
-  }catch(_){/* noop */} },[state?.debug]);
   const { auth, setAuth, ui, setUI, showToast,
           state, setState,
           cloud, setCloud, cloudLoad, cloudSave,
@@ -2459,6 +2423,40 @@ function AuthenticatedApp(props){
           <VacationPolicyPanel state={state} up={up} />
           <RefuerzoPolicyPanel state={state} up={up} />
 <ConciliacionPanel state={state} up={up} />
+          <Card title="Debug">
+            <div className="space-y-2 text-sm">
+              <label className="flex items-center gap-2">
+                <input
+                  type="checkbox"
+                  checked={!!(state?.debug?.score)}
+                  onChange={e=>up(['debug','score'], e.target.checked)}
+                />
+                Mostrar ScoreDebugPanel
+              </label>
+
+              <label className="flex items-center gap-2">
+                <input
+                  type="checkbox"
+                  checked={!!(state?.debug?.weekendAudit)}
+                  onChange={e=>up(['debug','weekendAudit'], e.target.checked)}
+                />
+                Mostrar WeekendAuditPanel
+              </label>
+
+              {state?.debug?.weekendAudit === true && (
+                <div className="mt-3">
+                  <Card title="Weekend audit (Admin)">
+                    <WeekendAuditPanel
+                      assignments={ASS}
+                      people={state.people}
+                      startDate={startDate}
+                      weeks={state.weeks}
+                    />
+                  </Card>
+                </div>
+              )}
+            </div>
+          </Card>
           <PersonasPanel state={state} upPerson={upPerson} />
           <TurnosPanel state={state} up={up} />
           <FestivosPanel state={state} up={up} />
@@ -2553,9 +2551,7 @@ function AuthenticatedApp(props){
             }annualTarget={state.annualTargetHours}
           />
 
-            )}{(isAdmin && (state?.debug?.weekendAudit===true)) && (<Card title="Weekend audit (Admin)">
-  <WeekendAuditPanel assignments={ASS} people={state.people} startDate={startDate} weeks={state.weeks} />
-</Card>)}{(isAdmin && (state?.debug?.score===true)) && (<ScoreDebugPanel
+            )}{(isAdmin && (state?.debug?.score===true)) && (<ScoreDebugPanel
             assignments={ASS}
             people={state.people}
             startDate={startDate}
@@ -2579,26 +2575,6 @@ function AuthenticatedApp(props){
         {auth.user.role === 'admin' && (
           <section className="lg:col-span-3 space-y-6">
             <AdminUsersAndPerms auth={auth} />
-            <div className="p-3 border rounded-lg">
-              <label className="text-sm flex items-center gap-2">
-                <input
-                  type="checkbox"
-                  checked={!!(state?.debug?.score)}
-                  onChange={(e)=>up(['debug','score'], e.target.checked)}
-                />
-                Mostrar ScoreDebugPanel
-            <div className="mt-2">
-              <label className="text-sm flex items-center gap-2">
-                <input
-                  type="checkbox"
-                  checked={!!(state?.debug?.weekendAudit)}
-                  onChange={(e)=>up(['debug','weekendAudit'], e.target.checked)}
-                />
-                Mostrar WeekendAuditPanel
-              </label>
-            </div>
-              </label>
-            </div>
           </section>
         )}
       </main>
@@ -2619,12 +2595,3 @@ function AuthenticatedApp(props){
     </div>
   );
 }
-
-  useEffect(()=>{ try{
-    if(raw){
-      const dbg = JSON.parse(raw);
-      setState(prev=>({...prev, debug:{...(prev.debug||{}), ...dbg}}));
-    }
-  }catch(_){/* noop */} },[]);
-  useEffect(()=>{ try{
-  }catch(_){/* noop */} },[state?.debug]);
diff --git a/src/components/WeekendAuditPanel.jsx b/src/components/WeekendAuditPanel.jsx
index 0bf3407..6876352 100644
--- a/src/components/WeekendAuditPanel.jsx
+++ b/src/components/WeekendAuditPanel.jsx
@@ -1,112 +1,123 @@
-import { useMemo } from "react";
+import React, { useMemo } from "react";
 
-function isWE(dateStr){ const d=new Date(dateStr); const w=d.getDay(); return w===0||w===6; }
-function fmt(n){ return new Intl.NumberFormat('es-ES').format(n); }
-
-export default function WeekendAuditPanel({ assignments = {}, people = [], startDate, weeks }){
-  const data = useMemo(()=>{
-    const map = new Map(people.map(p=>[p.id,{id:p.id,name:p.name,color:p.color,weekends:0,total:0,lastWasWE:false,maxStreak:0,streak:0}]));
-    let weDays=0,weSlots=0,weUnassigned=0,totSlots=0;
-    const weGaps = []; // <- huecos sin persona en WE
+/**
+ * props:
+ *  - assignments: { [dateStr: string]: Array<{ personId: string, shift: {start:string,end:string,label?:string}, ... }> }
+ *  - people: Array<{ id:string, name:string, color?:string }>
+ *  - startDate: Date
+ *  - weeks: number
+ */
+export default function WeekendAuditPanel({ assignments = {}, people = [], startDate, weeks }) {
+  const data = useMemo(() => {
+    const byId = new Map(people.map(p => [p.id, { id: p.id, name: p.name, color: p.color, weekends: 0, total: 0, maxStreak: 0 }]));
+    let weDays = 0, weSlots = 0, weUnassigned = 0, totSlots = 0;
 
     const keys = Object.keys(assignments).sort();
-    const from = startDate? new Date(startDate) : null;
-    const to   = startDate? new Date(startDate.getTime()+(weeks*7-1)*86400000) : null;
-
-    for(const k of keys){
-      const inRange = !from || (new Date(k) >= from && new Date(k) <= to);
-      if(!inRange) continue;
-      const weekend = isWE(k);
-      const arr = assignments[k]||[];
-      totSlots += arr.length;
-      if(weekend){ weDays++; weSlots += arr.length; }
-
-      // Huecos sin persona
-      if(weekend){
-        for(const a of arr){
-          if(!a?.personId){
-            weUnassigned++;
-            weGaps.push({
-              date:k,
-              label:a?.shift?.label ?? "",
-              start:a?.shift?.start ?? "",
-              end:a?.shift?.end ?? "",
-            });
-          }
-        }
-      }
+    const from = startDate instanceof Date ? startDate : (startDate ? new Date(startDate) : null);
+    const to   = startDate instanceof Date && Number.isFinite(+weeks)
+      ? new Date(+startDate + (weeks*7-1)*24*3600*1000)
+      : null;
+
+    const inRange = (ds) => {
+      if (!from || !to) return true;
+      const d = new Date(ds);
+      return d >= from && d <= to;
+    };
+    const isWE = (ds) => {
+      const d = new Date(ds);
+      const dow = d.getDay();
+      return dow === 0 || dow === 6;
+    };
+
+    // simple “racha” por persona: contamos días WE consecutivos
+    const streaks = new Map(); // id -> { lastWasWE:boolean, run:number }
+    for (const id of byId.keys()) streaks.set(id, { lastWasWE:false, run:0 });
+
+    for (const ds of keys) {
+      if (!inRange(ds)) continue;
+      const arr = Array.isArray(assignments[ds]) ? assignments[ds] : [];
+      const weekend = isWE(ds);
+      tot_slots: for (const a of arr) {
+        // total de slots
+        totSlots++;
+        if (weekend) weSlots++;
 
-      for(const a of arr){
-        if(!a?.personId) continue;
-        const rec = map.get(a.personId); if(!rec) continue;
+        const pid = a?.personId;
+        if (!pid) { if (weekend) weUnslide: weUnassigned++; continue tot_slots; }
+
+        const rec = byId.get(pid);
+        if (!rec) continue;
         rec.total++;
-        if(weekend){
+
+        if (weekend) {
+          weDays += 0; // contamos por día aparte; ya contamos weSlots arriba
+          const st = streaks.get(pid) || { lastWasWE:false, run:0 };
+          st.run = st.lastWasWE ? (st.run + 1) : 1;
+          st.lastWasWe = true;
+          streaks.set(pid, st);
+          if (st.run > rec.maxStreak) rec.maxStreak = st.run;
           rec.weekends++;
-          rec.streak = rec.lastWasWE ? rec.streak+1 : 1;
-          rec.maxStreak = Math.max(rec.maxStreak, rec.streak);
-          rec.lastWasWE = true;
-        }else{
-          rec.lastWasWE=false; rec.streak=0;
+        } else {
+          const st = streaks.get(pid);
+          if (st) { st.lastWasWe = false; st.run = 0; streaks.set(pid, st); }
         }
       }
     }
 
-    const rows = [...map.values()].map(r=>({...r,ratio:r.total? r.weekends/r.total:0})).sort((a,b)=>b.weekends-a.weekends);
-    const avgWE = rows.length? rows.reduce((s,r)=>s+r.weekends,0)/rows.length : 0;
-    const stdev = rows.length? Math.sqrt(rows.reduce((s,r)=>s+Math.pow(r.weekends-(avgWE||0),2),0)/rows.length) : 0;
-    const top3 = rows.slice(0,3), bottom3=[...rows].reverse().slice(0,3);
+    const rows = Array.from(byId.values()).map(r => ({
+      ...r,
+      ratio: r.total ? r.total === 0 ? 0 : r.weekends / r.total : 0
+    })).sort((a,b) => b.weekends - a.weekends || a.name.localeCompare(b.name));
+
+    const avgWE = rows.length ? rows.reduce((s,r)=>s + r.weekends, 0) / rows.length : 0;
+    const stdev = rows.length ? Math.sqrt(rows.reduce((s,r)=> s + Math.pow(r.weekends - avgWE, 2), 0) / rows.length) : 0;
+    const top3 = rows.slice(0, 3);
 
-    return { weDays,weSlots,weUnassigned,totSlots,avgWE,stdev,rows,top3,bottom3,weGaps };
-  },[assignments,people,startDate,weeks]);
+    return { rows, top3, weDays, weSlots, weUnassigned, totSlots, avgWE, stdev };
+  }, [assignments, people, startDate, weeks]);
 
-  function exportCSV(){
-    const rows = data.rows||[];
+  const exportCSV = () => {
     const header = ["id","name","weekends","total","ratio","maxStreak"];
-    const lines = [header.join(",")].concat(rows.map(r=>[
-      r.id, JSON.stringify(r.name), r.weekends, r.total, (r.ratio*100).toFixed(0)+"%", r.maxStreak
-    ].join(",")));
-    const blob = new Blob([lines.join("\n")],{type:"text/csv;charset=utf-8;"});
-    const a=document.createElement("a"); a.href=URL.createObjectURL(blob); a.download="weekend-audit.csv"; a.click(); URL.revokeObjectURL(a.href);
-  }
-
-  function exportGapsCSV(){
-    const rows = data.weGaps||[];
-    const header = ["date","label","start","end"];
-    const lines = [header.join(",")].concat(rows.map(r=>[
-      r.date, JSON.stringify(r.label||""), r.start, r.end
-    ].join(",")));
-    const blob = new Blob([lines.join("\n")],{type:"text/csv;charset=utf-8;"});
-    const a=document.createElement("a"); a.href=URL.createObjectURL(blob); a.download="weekend-gaps.csv"; a.click(); URL.revokeObjectURL(a.href);
-  }
+    const body = data.rows.map(r => [
+      r.id, JSON.stringify(r.name??""), r.weekends, r.total, ((r.ratio*100)|0)+"%", r.maxStreak
+    ].join(","));
+    const blob = new Blob([ [header.join(","), ...body].join("\n") ], { type:"text/csv;charset=utf-8;" });
+    const a = document.createElement("a");
+    a.href = URL.createObjectURL(blob);
+    a.download = "weekend-audit.csv";
+    a.click();
+    URL.revokeObjectURL(a.href);
+  };
+
+  const fmt = (n) => new Intl.NumberFormat("es-ES").format(n);
 
   return (
     <div className="space-y-4">
-      <div className="flex items-center justify-between">
-        <div className="text-sm font-medium">Weekend audit — rango visible</div>
-        <div className="text-xs text-slate-500">
-          Días WE: <b>{fmt(data.weDays)}</b> · Slots WE: <b>{fmt(data.weSlots)}</b> ·
-          Sin asignar WE: <b className={data.weUnassigned? "text-rose-600": ""}>{fmt(data.weUnassigned)}</b> ·
-          Slots totales: <b>{fmt(data.totSlots)}</b>
+      <div className="flex flex-wrap items-center justify-between gap-2">
+        <div className="text-sm font-medium">Weekend audit (rango visible)</div>
+        <div className="text-xs text-slate-600">
+          WE días: <b>{fmt(data.weDays)}</b> · WE slots: <b>{fmt(data.weSlots)}</b> ·
+          sin asignar: <b className={data.weUnassigned? "text-rose-600": ""}>{fmt(data.weUnassigned)}</b> ·
+          total slots: <b>{fmt(data.totSlots)}</b>
         </div>
       </div>
 
-      <div className="flex items-center justify-end gap-2">
+      <div className="flex justify-end">
         <button onClick={exportCSV} className="px-3 py-1.5 rounded-lg border text-sm">Exportar CSV</button>
-        <button onClick={exportGapsCSV} className="px-3 py-1.5 rounded-lg border text-sm">Exportar huecos WE</button>
       </div>
 
       <div className="grid md:grid-cols-3 gap-3">
-        {data.top3.map(p=>{
-          const z = data.stdev ? (p.weekends - (data.avgWE||0))/data.stdev : 0;
-          const tag = z>=1 ? "🔴" : z>=0.5 ? "🟡" : "🟢";
+        {data.top3.map(p => {
+          const z = data.stdev ? (p.weekends - data.avgWE) / data.stdev : 0;
+          const tag = z >= 1 ? "🔴" : z >= 0.5 ? "🟡" : "🟢";
           return (
             <div key={p.id} className="rounded-xl border p-3">
               <div className="flex items-center gap-2 mb-1">
-                <span className="h-3 w-3 rounded" style={{background:p.color}}/>
+                <span className="h-3 w-3 rounded" style={{background:p.color}} />
                 <div className="text-sm font-medium">{p.name} <span className="opacity-70">{tag}</span></div>
               </div>
               <div className="text-xs text-slate-600">
-                WE: <b>{p.weekends}</b> · Total: {p.total} · Ratio WE: {(p.ratio*100).toFixed(0)}% · Racha máx: {p.maxStreak}
+                WE: <b>{p.weekends}</b> · Total: {p.total} · Ratio WE: {(p.ratio*100|0)}% · Racha máx: {p.maxStreak}
               </div>
             </div>
           );
@@ -125,7 +136,7 @@ export default function WeekendAuditPanel({ assignments = {}, people = [], start
             </tr>
           </thead>
           <tbody>
-            {data.rows.map(p=>(
+            {data.rows.map(p => (
               <tr key={p.id} className="border-b">
                 <td className="p-2">
                   <div className="inline-flex items-center gap-2">
@@ -133,26 +144,15 @@ export default function WeekendAuditPanel({ assignments = {}, people = [], start
                     {p.name}
                   </div>
                 </td>
-                <td className="p-2 text-right">{fmt(p.weekends)}</td>
-                <td className="p-2 text-right">{fmt(p.total)}</td>
-                <td className="p-2 text-right">{(p.ratio*100).toFixed(0)}%</td>
-                <td className="p-2 text-right">{fmt(p.maxStreak)}</td>
+                <td className="p-2 text-end">{fmt(p.weekends)}</td>
+                <td className="p-2 text-end">{fmt(p.total)}</td>
+                <td className="p-2 text-end">{(p.xRatio||p.ratio).toLocaleString(undefined,{maximumFractionDigits:0})}%</td>
+                <td className=" p-2 text-end">{fmt(p.maxStreak)}</td>
               </tr>
             ))}
           </tbody>
         </table>
       </div>
-
-      <div className="text-xs">
-        {data.weUnassigned>0 && (
-          <div className="text-rose-600">⚠ Hay {fmt(data.weUnassigned)} huecos de fin de semana sin asignar.</div>
-        )}
-        {data.rows.length>0 && (
-          <div className="text-slate-600">
-            Media WE por persona: <b>{fmt(Number(data.avgWE).toFixed(1))}</b>
-          </div>
-        )}
-      </div>
     </div>
   );
 }
-- 
2.45.2

